spring.application.name=team

#서버 포트 설정하는 방법.
server.port=8888
#yml 설정 방법
#server: 
#port: 8888 반드시 들여쓰기도 필요하다. //속성과 값은 한 칸 띄운다.

#DB 연동하는 설정.

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.datasource.url=jdbc:mysql://localhost:3306/jsl22?ServerTimezone=Asia/Tokyo
#나중에 오라클 db 하면 localhost 자리에 aws 주소
#여기서의 jsl22은 데이터베이스의 이름

spring.datasource.username=jsl22
spring.datasource.password=1234


#JPA설정
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

#Mybatis 설정
mybatis.mapper-locations=classpath:mapper/**/*.xml
#mybatis는 크루드 작업을 처리할 때 sql문 형식을 그대로 사용하는데, 그러한 형식은 xml형식으로 작성되어 있고, 그 파일이 어디에 있냐고 하는 설정.
#**은 모든 파일과 모든 폴더를 뜻한다.
#로컬호스트에서만 쓸 거면 상관 없지만, aws같은 곳에서 쓰려면 반드시 src/main/resource 폴더 안에 mapper 폴더를 만들어야함.

#마이바티스와 연동하는 패키지는 어디에 있는가.
mybatis.type-aliases-package=com.team.domain
#리액트나 뷰, =자바스크립트 프레임워크를 연동해서 스프링부트를 통해 만들 때에는 기본 src에 만든다. 프론트앤드 프로그래밍은 src에 만드는 게 편리하다.
#기본 src는 즉 jsp를 사용할 떄 한다. 또한 jsp는 properties에 jsp를 사용할 거라고 설정을 해줘야 한다.
#타임리프를 이용해 개발을 할 때 html은 src/main/resource의 templates에 쓴다.

#파일 업로드 및 이미지 출력 경로 설정
file.upload.path=C:/upload/item/    #전체파일 저장 경로
itemImgLocation=C:/upload/item/     #상품 이미지 저장 경로
uploadPath=/upload/item/            #웹에서 이미지 접근 경로
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB

#dto와 컬럼명 자동매핑 설정
mybatis.configuration.map-underscore-to-camel-case=true


#인코딩 설정.
# spring.servlet.multipart.encoding=utf-8
# spring.http.encoding.charset=utf-8
# spring.http.encoding.enabled=true
# spring.http.encoding.force=true
