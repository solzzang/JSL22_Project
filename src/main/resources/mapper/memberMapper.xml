<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.disaster.mapper.MemberMapper">

    <!-- 이메일 중복 확인 -->
    <select id="countByEmail" resultType="int">
        SELECT COUNT(*) FROM member WHERE email = #{email}
    </select>
    
    <!-- 닉네임 중복 확인 -->
    <select id="countByNickname" resultType="int">
        SELECT COUNT(*) FROM member WHERE nickname = #{nickname}
    </select>
    
    <!-- 회원 등록 -->
    <insert id="insertMember" parameterType="com.disaster.domain.MemberDTO" useGeneratedKeys="true" keyProperty="memberId">
        INSERT INTO member (
            email, 
            password_hash, 
            name,
            nickname,
            phone, 
            role, 
            is_active, 
            marketing_consent,
            terms_agreed_at,
            privacy_agreed_at
        ) VALUES (
            #{email}, 
            #{passwordHash}, 
            #{name},
            #{nickname},
            #{phone}, 
            #{role}, 
            #{isActive}, 
            #{marketingConsent},
            #{termsAgreedAt},
            #{privacyAgreedAt}
        )
    </insert>
    
    <!-- 주소 등록 -->
    <insert id="insertMemberAddress" parameterType="com.disaster.domain.MemberAddressDTO">
        INSERT INTO member_address (
            member_id,
            postal_code,
            pref_code,
            muni_code,
            addr_line1,
            addr_line2,
            is_primary,
            disaster_status
        ) VALUES (
            #{memberId},
            #{postalCode},
            #{prefCode},
            #{muniCode},
            #{addrLine1},
            #{addrLine2},
            #{isPrimary},
            #{disasterStatus}
        )
    </insert>
    
    <!-- 로그인 - 이메일로 회원 조회 -->
    <select id="findByEmail" resultType="com.disaster.domain.MemberDTO">
        SELECT 
            member_id as memberId,
            email,
            password_hash as passwordHash,
            name,
            nickname,
            phone,
            line_user_id as lineUserId,
            role,
            is_active as isActive,
            marketing_consent as marketingConsent,
            terms_agreed_at as termsAgreedAt,
            privacy_agreed_at as privacyAgreedAt,
            created_at as createdAt,
            updated_at as updatedAt
        FROM member 
        WHERE email = #{email} AND is_active = TRUE
    </select>
    
    <update id="updateResetToken">
    UPDATE member SET 
        reset_token = #{resetToken},
        reset_token_expires = #{expiresAt}
    WHERE email = #{email}
	</update>
	
	<!-- 토큰으로 사용자 조회 -->
<select id="findByResetToken" resultType="com.disaster.domain.MemberDTO">
    SELECT 
        member_id as memberId,
        email,
        reset_token_expires as resetTokenExpires
    FROM member 
    WHERE reset_token = #{resetToken} AND is_active = TRUE
</select>

<!-- 비밀번호 업데이트 -->
<update id="updatePassword">
    UPDATE member SET 
        password_hash = #{passwordHash}
    WHERE email = #{email}
</update>

<!-- 토큰 삭제 -->
<update id="clearResetToken">
    UPDATE member SET 
        reset_token = NULL,
        reset_token_expires = NULL
    WHERE email = #{email}
</update>

</mapper>